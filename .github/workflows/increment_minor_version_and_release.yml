name: Increment Major Version and Create Release

on:
  workflow_dispatch:

jobs:
  increment_major:
    name: Increment Minor Version
    runs-on: ubuntu-latest

    steps:
      # Fetch the latest release
      - name: Get Latest Release Tag
        id: get_latest_release
        run: |
          LATEST_TAG=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            https://api.github.com/repos/${{ github.repository }}/releases/latest | jq -r .tag_name)
          if [ "$LATEST_TAG" == "null" ]; then
            # Default to v1.0.0 if no releases exist
            LATEST_TAG="v1.0.0"
          fi
          echo "Latest tag: $LATEST_TAG"
          echo "LATEST_TAG=$LATEST_TAG" >> $GITHUB_OUTPUT

      # Increment 'minor' version
      - name: Increment Minor
        id: increment_version
        run: |
          VERSION=${{ steps.get_latest_release.outputs.LATEST_TAG }}

          # Extract current version
          MAJOR=$(echo $VERSION | cut -d. -f1 | sed 's/v//')
          MINOR=$(echo $VERSION | cut -d. -f2)

          # Increment minor part and reset incremental part
          NEW_MINOR=$((MINOR + 1))
          NEW_VERSION="v${MAJOR}.${NEW_MINOR}.0"

          echo "New version will be $NEW_VERSION"
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_OUTPUTS

      # Create a release
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.increment_version.outputs.NEW_VERSION }}
          release_name: "Release ${{ steps.increment_version.outputs.NEW_VERSION }}"
          draft: false
          prerelease: false

      # Upload the 'install' file to the release
      - name: Upload 'install' File
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./install
          asset_name: install
          asset_content_type: application/octet-stream
