: << END_WIN
:: @ECHO OFF
:: If this script is being run using curl it will need to save
:: itself to a temporary file.
SET "TEMP_INSTALL_SCRIPT=%TEMP%\%RANDOM%-%RANDOM%.bat"
TIMEOUT /T 0 >NUL 2>NUL
IF ERRORLEVEL 1 (curl -sL https://raw.githubusercontent.com/toru173/nomi-discord-python/refs/heads/main/install -o %TEMP_INSTALL_SCRIPT% && START /WAIT /I CMD /K %TEMP_INSTALL_SCRIPT% >NUL 2>&1 & DEL %TEMP_INSTALL_SCRIPT% && EXIT)
::
:: We need to set a temporary install file path before
:: the pipe-check because expansion behaves differently
:: when executing from a pipe. Thanks cmd.exe!
::
:: ============================================================================
:: === The LICENSE for this script can be found at the bottom of this file ====
:: ============================================================================
::
:: This is the Windows part of the installation script.

SET INSTALL_FOLDER=nomi-discord-python
SET HOME_DIR=%USERPROFILE%

:: Perform a basic sanity check
IF NOT "%OS%" == "Windows_NT" (
    ECHO "Windows NT is required"
    GOTO cleanup
)

:: First, check for required dependencies. We need Docker for
:: this project to run, so check we have that installed. If
:: not, prompt the user to download it then re-run this script.
:: Check if Docker is installed
docker --version >NUL 2>&1
IF ERRORLEVEL 1 (
    ECHO Docker is required but not installed.
    ECHO Please install Docker from the following URL:
    ECHO https://www.docker.com/products/docker-desktop/
    
    SET /P OPEN_BROWSER="Would you like to open the Docker download page now? (Y/N): "
    IF /I "%OPEN_BROWSER%"=="Y" (
        START https://www.docker.com/products/docker-desktop/
    ) ELSE (
        ECHO Please install Docker and re-run the installer
    )
    :: GOTO cleanup
)

:: Check if tar is installed. It SHOULD be because it shipped
:: with Windows before cURL, and this script is most likely
:: running using cURL.
tar --version >NUL 2>&1
IF ERRORLEVEL 1 (
    ECHO tar is required but not installed. It was integrated into Windows 10 in 2018. Do you need to update?
    ECHO Alternatively tar can be installed by installing Git for Windows, which provides tar and other Unix tools.
    ECHO Please install Git from the following URL:
    ECHO https://git-scm.com/download/win

    SET /P OPEN_BROWSER="Would you like to open the Git for Windows download page now? (Y/N): "
    IF /I "%OPEN_BROWSER%"=="Y" (
        START https://git-scm.com/download/win
    ) ELSE (
        ECHO Please install tar and re-run the installer
    )
    GOTO cleanup
)

:: Now we know know we have Docker and tar we check with the user if
:: installing in our default location (%USERPROFILE%\%INSTALL_FOLDER%)
:: is ok. If not, ask for an alternative.
SET /P INSTALL_DIR="Enter installation directory (Press Enter for default: %USERPROFILE%\%INSTALL_FOLDER%): "
IF "%INSTALL_DIR%"=="" SET "INSTALL_DIR=%USERPROFILE%\%INSTALL_FOLDER%"

:: Create the folder if it doesn't exist.
IF NOT EXIST "%INSTALL_DIR%" (
    MKDIR "%INSTALL_DIR%"
)

:: Generate a random file name using the %RANDOM% environment variable
SET "TEST_FILE=%INSTALL_DIR%\test_%RANDOM%-%RANDOM%.txt"

:: Check we have write access to the location the user has provided.
:: We'll try to create a test file to check write access
ECHO Testing write access > %TEST_FILE% 2>NUL
IF ERRORLEVEL 1 (
    ECHO It looks like we can't write to the folder: %INSTALL_DIR%.
    ECHO Please make sure you have permission to write to this directory and try again.
    GOTO cleanup
)

:: Delete the test file after the check
DEL %TEST_FILE%

:: Here we download the latest release from GitHub to INSTALL_FOLDER
ECHO Downloading the latest version from GitHub
curl -sL -o "%INSTALL_DIR%\latest.zip" https://github.com/toru173/nomi-discord-python/archive/refs/heads/main.zip

IF NOT EXIST "%INSTALL_DIR%\latest.zip" (
    ECHO Something went wrong during the download. Please try again.
    GOTO cleanup
)


:: Warn the user that existing files will be overwritten. No going back now!
ECHO WARNING: Extracting the archive will overwrite existing files in the directory: %INSTALL_DIR%.
SET /P CONTINUE="Are you sure you want to proceed with the installation? (Y/N): "
IF /I NOT "%CONTINUE%"=="Y" (
    ECHO Extraction canceled. No changes were made.
    GOTO cleanup
)

:: Proceed with unzipping the file using tar and overwrite existing files
tar -xvf "%INSTALL_DIR%\latest.zip" -C "%INSTALL_DIR%" --overwrite >NUL
IF ERRORLEVEL 1 (
    ECHO Failed to extract the installation files. Please try again.
    GOTO cleanup
)

:: Check if the Nomi creation script exists (it should). Rename it to
:: create_nomi.bat to make running it from the command line easier later
IF EXIST "%INSTALL_DIR%\create_nomi" (
    REN "%INSTALL_DIR%\create_nomi" create_nomi.bat
)

:: Once everything unzipped we're good to go! Display a success message
:: to the user and ask if they want to set up any Nomis now. If the
:: user wants to set up a Nomi run the setup file in this directory
:: for them
GOTO cleanup
IF EXIST "%INSTALL_DIR%\create_nomi.bat" (
    ECHO The installation completed succesfully.
    SET /P RUN_SETUP="Do you want to create a Nomi now? (Y/N): "
    IF /I "%RUN_SETUP%"=="Y" (
        ECHO Creating a new Nomi
        START "%INSTALL_DIR%\create_nomi.bat"
    ) ELSE (
        ECHO Creating a new Nomi was skipped. You can run it later by executing "%INSTALL_DIR%\create_nomi.bat".
    )
)

:: All done! Let's exit from the Windows part of the script
:cleanup
ECHO Please close this window to return to the previous command screen
EXIT /B
END_WIN

# This is the macOS/Linux part of the script. We have to do
# The same steps here, but in a way that works for Bash. We

INSTALL_FOLDER=nomi-discord-python

# Perform some basic sanity checks...
if [ -z "${BASH_VERSION:-}" ]
then
   >&2 echo "Bash is required to run this script." 
   cleanup 1
fi

echo "Running in Bash!"

# Get the user's home directory. By default, we'll install into
# a folder called "INSTALL_FOLDER" in their home folder

# First, check for required dependencies. We need Docker for
# this project to run, so check we have that installed. If
# not, prompt the user to download it then re-run this script.

# Now we know know we have Docker we check with the user if
# installing in our default location (~/$INSTALL_FOLDER)
# is ok. If not, ask for an alternative.

# Check we have write access to the location the user has provided.
# Create the folder if it doesn't exist.

# Change directory to INSTALL_FOLDER. Here we download the latest
# release from GitHub then unzip it

# Once it's unzipped we're good to go! Display a success message
# to the user and ask if they want to set up any Nomis now. If the
# user wants to set up a Nomi run the setup file in this directory
# for them

# All done! Let's exit from the macOS/Linux part of the script
exit 0

LICENSE

Copyright (c) 2024-present toru173 and contributors

Redistribution and use in source and binary forms, with or without 
modification, are permitted (subject to the limitations in the disclaimer 
below) provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, 
  this list of conditions and the following disclaimer.
* Redistributions in binary form must reproduce the above copyright notice, 
  this list of conditions and the following disclaimer in the documentation 
  and/or other materials provided with the distribution.
* Neither the name of the copyright holder nor the names of the contributors
  may be used to endorse or promote products derived from this software
  without specific prior written permission.

NO EXPRESS OR IMPLIED LICENSES TO ANY PARTY'S PATENT RIGHTS ARE GRANTED BY 
THIS LICENSE. THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND 
CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT 
NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A 
PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER 
OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, 
EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, 
PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; 
OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, 
WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR 
OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF 
ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.